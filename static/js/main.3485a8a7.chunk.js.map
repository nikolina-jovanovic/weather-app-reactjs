{"version":3,"sources":["WeatherCards.js","App.js","index.js"],"names":["WeatherCards","weather5Days","className","map","day","weather","description","includes","size","icon","faSun","faCloudSun","faCloud","faCloudRain","faSmog","faPooStorm","faWind","faSnowflake","Date","dt","toLocaleDateString","style","color","faThermometerFull","Math","round","temp","max","faThermometerEmpty","min","App","useState","name","country","currentTemp","maxTemp","minTemp","weatherCurrent","setWeatherCurrent","enterClicked","setEnterClicked","query","setQuery","setWeather5Days","api_key","useEffect","a","axios","get","then","res","data","sys","main","temp_max","temp_min","lat","coord","lon","catch","err","console","log","fetchCurrentWeather","sliced","daily","slice","fetch5DaysWeather","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","preventDefault","autoFocus","display","fontSize","background","padding","borderRadius","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3485a8a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSun ,faCloud, faPooStorm, faCloudRain, faSmog, faWind, faSnowflake, faThermometerFull, faThermometerEmpty, faCloudSun } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst WeatherCards = ({ weather5Days }) => {\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {typeof weather5Days !== \"undefined\" &&\r\n        weather5Days.map((day) => (\r\n          <div>\r\n            <div className=\"card\">\r\n              <div className=\"container\">\r\n                {day.weather[0].description.includes(\"clear\")? (<FontAwesomeIcon size=\"3x\" icon={faSun} />) :\r\n                day.weather[0].description.includes(\"few\") ? (\r\n                  <FontAwesomeIcon size=\"3x\" icon={faCloudSun} />\r\n                ) : day.weather[0].description.includes(\"clouds\") ? (\r\n                  <FontAwesomeIcon size=\"3x\" icon={faCloud} />\r\n                ) : day.weather[0].description.includes(\"rain\") ? (\r\n                  <FontAwesomeIcon size=\"3x\" icon={faCloudRain} />\r\n                ) : day.weather[0].description.includes(\"haze\") ||\r\n                  day.weather[0].description.includes(\"mist\") ? (\r\n                  <FontAwesomeIcon size=\"3x\" icon={faSmog} />\r\n                ) : day.weather[0].description.includes(\"storm\") ||\r\n                  day.weather[0].description.includes(\"thunder\") ? (\r\n                  <FontAwesomeIcon size=\"3x\" icon={faPooStorm} />\r\n                ) : day.weather[0].description.includes(\"wind\") ? (\r\n                  <FontAwesomeIcon size=\"3x\" icon={faWind} />\r\n                ) : day.weather[0].description.includes(\"snow\") ? (\r\n                  <FontAwesomeIcon size=\"4x\" icon={faSnowflake} />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <h3>{new Date(day.dt * 1000).toLocaleDateString()}</h3>\r\n                <h4>\r\n                  <FontAwesomeIcon\r\n                    size=\"1x\"\r\n                    style={{ color: \"red\" }}\r\n                    icon={faThermometerFull}\r\n                  />\r\n                  {Math.round(day.temp.max)}&deg;C&nbsp;&nbsp;&nbsp;\r\n                  <FontAwesomeIcon\r\n                    size=\"1x\"\r\n                    style={{ color: \"lightskyblue\" }}\r\n                    icon={faThermometerEmpty}\r\n                  />\r\n                  {Math.round(day.temp.min)}\r\n                  &deg;C\r\n                </h4>\r\n                <h4>{day.weather[0].description}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCards;\r\n","import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherCards from \"./WeatherCards\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun ,faCloud, faPooStorm, faCloudRain, faSmog, faWind, faCloudSun, faSnowflake, faThermometerFull, faThermometerEmpty } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function App() {\n  const [weatherCurrent, setWeatherCurrent] = useState({\n    name: \"\",\n    country: \"\",\n    currentTemp: \"\",\n    maxTemp: \"\",\n    minTemp: \"\",\n    description: \"\"\n  });\n  const [enterClicked, setEnterClicked] = useState(false);\n  const [query, setQuery] = useState(\"Sarajevo\");\n  const [weather5Days, setWeather5Days] = useState([]);\n\n\n  const api_key = \"76e31035647ed56273542cb193f44ac9\";\n\n  //Current weather data fetching:\n\n  useEffect(() => {\n    async function fetchCurrentWeather() {\n      await axios\n        .get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${api_key}`\n        )\n        .then((res) => {\n          //console.log(res.data);\n          setWeatherCurrent({\n            ...weatherCurrent,\n            name: res.data.name,\n            country: res.data.sys.country,\n            currentTemp: Math.round(res.data.main.temp),\n            maxTemp: Math.round(res.data.main.temp_max),\n            minTemp: Math.round(res.data.main.temp_min),\n            description: res.data.weather[0].description,\n            lat: res.data.coord.lat,\n            lon: res.data.coord.lon\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n    fetchCurrentWeather();\n\n    setEnterClicked(false);\n  }, [enterClicked]);\n\n  //5-days forecast data fetching:\n\n  useEffect(() => {\n    if (typeof weatherCurrent.lat !== \"undefined\") {\n      async function fetch5DaysWeather() {\n        await axios\n          .get(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCurrent.lat}&lon=${weatherCurrent.lon}&exclude=hourly,minutely&units=metric&appid=${api_key}`\n          )\n          .then((res) => {\n            //console.log(res.data.daily);\n            const sliced = res.data.daily.slice(1, 6);\n            setQuery(\"\");\n            setWeather5Days(sliced);\n          })\n          .catch((err) => console.log(err));\n      }\n      fetch5DaysWeather();\n    } else {\n      return;\n    }\n  }, [weatherCurrent.lat]);\n\n  // Search function:\n  \n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      evt.preventDefault();\n      setEnterClicked(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        className=\"search-bar\"\n        type=\"text\"\n        placeholder=\"Search for the city...\"\n        onChange={(e) => setQuery(e.target.value)}\n        value={query}\n        onKeyPress={search}\n        autoFocus\n      />\n      <h1>\n        {weatherCurrent.name}, {weatherCurrent.country}\n      </h1>\n      <span className=\"icons\">\n        {weatherCurrent.description.includes(\"clear\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faSun} />\n        ) : weatherCurrent.description.includes(\"few\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faCloudSun} />\n        ) : weatherCurrent.description.includes(\"clouds\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faCloud} />\n        ) : weatherCurrent.description.includes(\"rain\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faCloudRain} />\n        ) : weatherCurrent.description.includes(\"haze\") ||\n          weatherCurrent.description.includes(\"mist\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faSmog} />\n        ) : weatherCurrent.description.includes(\"storm\") ||\n          weatherCurrent.description.includes(\"thunder\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faPooStorm} />\n        ) : weatherCurrent.description.includes(\"wind\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faWind} />\n        ) : weatherCurrent.description.includes(\"snow\") ? (\n          <FontAwesomeIcon size=\"4x\" icon={faSnowflake} />\n        ) : (\n          \"\"\n        )}\n      </span>\n      <h2 style={{ display: \"inline\", fontSize: \"38px\" }}>\n        &nbsp;{weatherCurrent.currentTemp}&deg;C\n      </h2>\n      <h3>\n        {\" \"}\n        <FontAwesomeIcon\n          size=\"1x\"\n          style={{ color: \"red\" }}\n          icon={faThermometerFull}\n        />\n        {weatherCurrent.maxTemp}&deg;C&nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\n        <FontAwesomeIcon\n          size=\"1x\"\n          style={{ color: \"lightskyblue\" }}\n          icon={faThermometerEmpty}\n        />{\" \"}\n        {weatherCurrent.minTemp}&deg;C\n      </h3>\n      <h3\n        style={{\n          background: \"rgba(3, 3, 3, 0.3)\",\n          display: \"inline\",\n          padding: \"7px\",\n          borderRadius: \"3px\"\n        }}\n      >\n        {weatherCurrent.description}\n      </h3>\n\n      <div>\n        <WeatherCards weather5Days={weather5Days} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}